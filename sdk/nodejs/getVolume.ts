// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fly:index/getVolume:getVolume", {
        "app": args.app,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    /**
     * The App this resource will be created in
     */
    app: string;
    /**
     * A fly-generated ID
     */
    id: string;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    /**
     * The App this resource will be created in
     */
    readonly app: string;
    readonly encrypted: boolean;
    /**
     * A fly-generated ID
     */
    readonly id: string;
    /**
     * A user-provided identifier
     */
    readonly name: string;
    /**
     * Fly region, ex `ord`, `sin`, `mad`
     */
    readonly region: string;
    /**
     * Size of volume in GB
     */
    readonly size: number;
}
export function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVolumeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("fly:index/getVolume:getVolume", {
        "app": args.app,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    /**
     * The App this resource will be created in
     */
    app: pulumi.Input<string>;
    /**
     * A fly-generated ID
     */
    id: pulumi.Input<string>;
}
