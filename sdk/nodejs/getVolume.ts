// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Fly volume resource
 */
export function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fly:index/getVolume:getVolume", {
        "app": args.app,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeArgs {
    /**
     * Name of app attached to
     */
    app: string;
    /**
     * ID of volume
     */
    id: string;
}

/**
 * A collection of values returned by getVolume.
 */
export interface GetVolumeResult {
    /**
     * Name of app attached to
     */
    readonly app: string;
    /**
     * ID of volume
     */
    readonly id: string;
    /**
     * name
     */
    readonly name: string;
    /**
     * region
     */
    readonly region: string;
    /**
     * Size of volume in GB
     */
    readonly size: number;
}
/**
 * Fly volume resource
 */
export function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeResult> {
    return pulumi.output(args).apply((a: any) => getVolume(a, opts))
}

/**
 * A collection of arguments for invoking getVolume.
 */
export interface GetVolumeOutputArgs {
    /**
     * Name of app attached to
     */
    app: pulumi.Input<string>;
    /**
     * ID of volume
     */
    id: pulumi.Input<string>;
}
