// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class App extends pulumi.CustomResource {
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppState, opts?: pulumi.CustomResourceOptions): App {
        return new App(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fly:index/app:App';

    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is App {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }

    public /*out*/ readonly appUrl!: pulumi.Output<string>;
    /**
     * Assign a shared ipv4 address to the app. Note that depending on conditions an app may get a shared ip automatically.
     */
    public readonly assignSharedIpAddress!: pulumi.Output<boolean>;
    /**
     * Name of application
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the organization to generate the app in, ex: `personal` (your initial org)
     */
    public readonly org!: pulumi.Output<string>;
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * A shared ipv4 address, automatically attached in certain conditions or if explicitly requested
     */
    public /*out*/ readonly sharedIpAddress!: pulumi.Output<string>;

    /**
     * Create a App resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppArgs | AppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppState | undefined;
            resourceInputs["appUrl"] = state ? state.appUrl : undefined;
            resourceInputs["assignSharedIpAddress"] = state ? state.assignSharedIpAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["org"] = state ? state.org : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["sharedIpAddress"] = state ? state.sharedIpAddress : undefined;
        } else {
            const args = argsOrState as AppArgs | undefined;
            resourceInputs["assignSharedIpAddress"] = args ? args.assignSharedIpAddress : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["org"] = args ? args.org : undefined;
            resourceInputs["appUrl"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["sharedIpAddress"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(App.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering App resources.
 */
export interface AppState {
    appUrl?: pulumi.Input<string>;
    /**
     * Assign a shared ipv4 address to the app. Note that depending on conditions an app may get a shared ip automatically.
     */
    assignSharedIpAddress?: pulumi.Input<boolean>;
    /**
     * Name of application
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the organization to generate the app in, ex: `personal` (your initial org)
     */
    org?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    /**
     * A shared ipv4 address, automatically attached in certain conditions or if explicitly requested
     */
    sharedIpAddress?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a App resource.
 */
export interface AppArgs {
    /**
     * Assign a shared ipv4 address to the app. Note that depending on conditions an app may get a shared ip automatically.
     */
    assignSharedIpAddress?: pulumi.Input<boolean>;
    /**
     * Name of application
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the organization to generate the app in, ex: `personal` (your initial org)
     */
    org?: pulumi.Input<string>;
}
