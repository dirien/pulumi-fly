// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ip extends pulumi.CustomResource {
    /**
     * Get an existing Ip resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpState, opts?: pulumi.CustomResourceOptions): Ip {
        return new Ip(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fly:index/ip:Ip';

    /**
     * Returns true if the given object is an instance of Ip.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ip {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ip.__pulumiType;
    }

    /**
     * Empty if using `sharedV4`
     */
    public /*out*/ readonly address!: pulumi.Output<string>;
    /**
     * The App this resource will be created in
     */
    public readonly app!: pulumi.Output<string>;
    /**
     * Fly region, ex `ord`, `sin`, `mad`
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * One of the following values (by regex): `^(v4|v6|private_v6)$`
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a Ip resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpArgs | IpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["app"] = state ? state.app : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as IpArgs | undefined;
            if ((!args || args.app === undefined) && !opts.urn) {
                throw new Error("Missing required property 'app'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["app"] = args ? args.app : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["address"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ip.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ip resources.
 */
export interface IpState {
    /**
     * Empty if using `sharedV4`
     */
    address?: pulumi.Input<string>;
    /**
     * The App this resource will be created in
     */
    app?: pulumi.Input<string>;
    /**
     * Fly region, ex `ord`, `sin`, `mad`
     */
    region?: pulumi.Input<string>;
    /**
     * One of the following values (by regex): `^(v4|v6|private_v6)$`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ip resource.
 */
export interface IpArgs {
    /**
     * The App this resource will be created in
     */
    app: pulumi.Input<string>;
    /**
     * Fly region, ex `ord`, `sin`, `mad`
     */
    region?: pulumi.Input<string>;
    /**
     * One of the following values (by regex): `^(v4|v6|private_v6)$`
     */
    type: pulumi.Input<string>;
}
