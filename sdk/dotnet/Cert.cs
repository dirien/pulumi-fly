// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Fly
{
    /// <summary>
    /// Fly certificate resource
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// &lt;break&gt;&lt;break&gt;```sh&lt;break&gt; $ pulumi import fly:index/cert:Cert exampleCert &lt;app_id&gt;,&lt;hostname&gt; &lt;break&gt;```&lt;break&gt;&lt;break&gt;
    /// </summary>
    [FlyResourceType("fly:index/cert:Cert")]
    public partial class Cert : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of app to attach to
        /// </summary>
        [Output("app")]
        public Output<string> App { get; private set; } = null!;

        /// <summary>
        /// check
        /// </summary>
        [Output("check")]
        public Output<bool> Check { get; private set; } = null!;

        /// <summary>
        /// DnsValidationHostname
        /// </summary>
        [Output("dnsvalidationhostname")]
        public Output<string> Dnsvalidationhostname { get; private set; } = null!;

        /// <summary>
        /// DnsValidationHostname
        /// </summary>
        [Output("dnsvalidationinstructions")]
        public Output<string> Dnsvalidationinstructions { get; private set; } = null!;

        /// <summary>
        /// DnsValidationTarget
        /// </summary>
        [Output("dnsvalidationtarget")]
        public Output<string> Dnsvalidationtarget { get; private set; } = null!;

        /// <summary>
        /// hostname
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;


        /// <summary>
        /// Create a Cert resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cert(string name, CertArgs args, CustomResourceOptions? options = null)
            : base("fly:index/cert:Cert", name, args ?? new CertArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cert(string name, Input<string> id, CertState? state = null, CustomResourceOptions? options = null)
            : base("fly:index/cert:Cert", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-fly",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cert resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cert Get(string name, Input<string> id, CertState? state = null, CustomResourceOptions? options = null)
        {
            return new Cert(name, id, state, options);
        }
    }

    public sealed class CertArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of app to attach to
        /// </summary>
        [Input("app", required: true)]
        public Input<string> App { get; set; } = null!;

        /// <summary>
        /// hostname
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        public CertArgs()
        {
        }
        public static new CertArgs Empty => new CertArgs();
    }

    public sealed class CertState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of app to attach to
        /// </summary>
        [Input("app")]
        public Input<string>? App { get; set; }

        /// <summary>
        /// check
        /// </summary>
        [Input("check")]
        public Input<bool>? Check { get; set; }

        /// <summary>
        /// DnsValidationHostname
        /// </summary>
        [Input("dnsvalidationhostname")]
        public Input<string>? Dnsvalidationhostname { get; set; }

        /// <summary>
        /// DnsValidationHostname
        /// </summary>
        [Input("dnsvalidationinstructions")]
        public Input<string>? Dnsvalidationinstructions { get; set; }

        /// <summary>
        /// DnsValidationTarget
        /// </summary>
        [Input("dnsvalidationtarget")]
        public Input<string>? Dnsvalidationtarget { get; set; }

        /// <summary>
        /// hostname
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        public CertState()
        {
        }
        public static new CertState Empty => new CertState();
    }
}
