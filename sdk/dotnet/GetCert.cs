// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Fly
{
    public static class GetCert
    {
        /// <summary>
        /// Fly certificate data source
        /// </summary>
        public static Task<GetCertResult> InvokeAsync(GetCertArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertResult>("fly:index/getCert:getCert", args ?? new GetCertArgs(), options.WithDefaults());

        /// <summary>
        /// Fly certificate data source
        /// </summary>
        public static Output<GetCertResult> Invoke(GetCertInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertResult>("fly:index/getCert:getCert", args ?? new GetCertInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of app attached to
        /// </summary>
        [Input("app", required: true)]
        public string App { get; set; } = null!;

        /// <summary>
        /// hostname
        /// </summary>
        [Input("hostname", required: true)]
        public string Hostname { get; set; } = null!;

        public GetCertArgs()
        {
        }
        public static new GetCertArgs Empty => new GetCertArgs();
    }

    public sealed class GetCertInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of app attached to
        /// </summary>
        [Input("app", required: true)]
        public Input<string> App { get; set; } = null!;

        /// <summary>
        /// hostname
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        public GetCertInvokeArgs()
        {
        }
        public static new GetCertInvokeArgs Empty => new GetCertInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertResult
    {
        /// <summary>
        /// Name of app attached to
        /// </summary>
        public readonly string App;
        /// <summary>
        /// check
        /// </summary>
        public readonly bool Check;
        /// <summary>
        /// DnsValidationHostname
        /// </summary>
        public readonly string Dnsvalidationhostname;
        /// <summary>
        /// DnsValidationHostname
        /// </summary>
        public readonly string Dnsvalidationinstructions;
        /// <summary>
        /// DnsValidationTarget
        /// </summary>
        public readonly string Dnsvalidationtarget;
        /// <summary>
        /// hostname
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// ID of certificate
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetCertResult(
            string app,

            bool check,

            string dnsvalidationhostname,

            string dnsvalidationinstructions,

            string dnsvalidationtarget,

            string hostname,

            string id)
        {
            App = app;
            Check = check;
            Dnsvalidationhostname = dnsvalidationhostname;
            Dnsvalidationinstructions = dnsvalidationinstructions;
            Dnsvalidationtarget = dnsvalidationtarget;
            Hostname = hostname;
            Id = id;
        }
    }
}
