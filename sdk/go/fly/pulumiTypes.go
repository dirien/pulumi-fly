// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fly

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MachineMount struct {
	Encrypted *bool `pulumi:"encrypted"`
	// Path for volume to be mounted on vm
	Path   string `pulumi:"path"`
	SizeGb *int   `pulumi:"sizeGb"`
	// Name or ID of volume
	Volume string `pulumi:"volume"`
}

// MachineMountInput is an input type that accepts MachineMountArgs and MachineMountOutput values.
// You can construct a concrete instance of `MachineMountInput` via:
//
//	MachineMountArgs{...}
type MachineMountInput interface {
	pulumi.Input

	ToMachineMountOutput() MachineMountOutput
	ToMachineMountOutputWithContext(context.Context) MachineMountOutput
}

type MachineMountArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Path for volume to be mounted on vm
	Path   pulumi.StringInput `pulumi:"path"`
	SizeGb pulumi.IntPtrInput `pulumi:"sizeGb"`
	// Name or ID of volume
	Volume pulumi.StringInput `pulumi:"volume"`
}

func (MachineMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineMount)(nil)).Elem()
}

func (i MachineMountArgs) ToMachineMountOutput() MachineMountOutput {
	return i.ToMachineMountOutputWithContext(context.Background())
}

func (i MachineMountArgs) ToMachineMountOutputWithContext(ctx context.Context) MachineMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineMountOutput)
}

// MachineMountArrayInput is an input type that accepts MachineMountArray and MachineMountArrayOutput values.
// You can construct a concrete instance of `MachineMountArrayInput` via:
//
//	MachineMountArray{ MachineMountArgs{...} }
type MachineMountArrayInput interface {
	pulumi.Input

	ToMachineMountArrayOutput() MachineMountArrayOutput
	ToMachineMountArrayOutputWithContext(context.Context) MachineMountArrayOutput
}

type MachineMountArray []MachineMountInput

func (MachineMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineMount)(nil)).Elem()
}

func (i MachineMountArray) ToMachineMountArrayOutput() MachineMountArrayOutput {
	return i.ToMachineMountArrayOutputWithContext(context.Background())
}

func (i MachineMountArray) ToMachineMountArrayOutputWithContext(ctx context.Context) MachineMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineMountArrayOutput)
}

type MachineMountOutput struct{ *pulumi.OutputState }

func (MachineMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineMount)(nil)).Elem()
}

func (o MachineMountOutput) ToMachineMountOutput() MachineMountOutput {
	return o
}

func (o MachineMountOutput) ToMachineMountOutputWithContext(ctx context.Context) MachineMountOutput {
	return o
}

func (o MachineMountOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MachineMount) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Path for volume to be mounted on vm
func (o MachineMountOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v MachineMount) string { return v.Path }).(pulumi.StringOutput)
}

func (o MachineMountOutput) SizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MachineMount) *int { return v.SizeGb }).(pulumi.IntPtrOutput)
}

// Name or ID of volume
func (o MachineMountOutput) Volume() pulumi.StringOutput {
	return o.ApplyT(func(v MachineMount) string { return v.Volume }).(pulumi.StringOutput)
}

type MachineMountArrayOutput struct{ *pulumi.OutputState }

func (MachineMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineMount)(nil)).Elem()
}

func (o MachineMountArrayOutput) ToMachineMountArrayOutput() MachineMountArrayOutput {
	return o
}

func (o MachineMountArrayOutput) ToMachineMountArrayOutputWithContext(ctx context.Context) MachineMountArrayOutput {
	return o
}

func (o MachineMountArrayOutput) Index(i pulumi.IntInput) MachineMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineMount {
		return vs[0].([]MachineMount)[vs[1].(int)]
	}).(MachineMountOutput)
}

type MachineService struct {
	// Port application listens on internally
	InternalPort int `pulumi:"internalPort"`
	// External ports and handlers
	Ports []MachineServicePort `pulumi:"ports"`
	// network protocol
	Protocol string `pulumi:"protocol"`
}

// MachineServiceInput is an input type that accepts MachineServiceArgs and MachineServiceOutput values.
// You can construct a concrete instance of `MachineServiceInput` via:
//
//	MachineServiceArgs{...}
type MachineServiceInput interface {
	pulumi.Input

	ToMachineServiceOutput() MachineServiceOutput
	ToMachineServiceOutputWithContext(context.Context) MachineServiceOutput
}

type MachineServiceArgs struct {
	// Port application listens on internally
	InternalPort pulumi.IntInput `pulumi:"internalPort"`
	// External ports and handlers
	Ports MachineServicePortArrayInput `pulumi:"ports"`
	// network protocol
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (MachineServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineService)(nil)).Elem()
}

func (i MachineServiceArgs) ToMachineServiceOutput() MachineServiceOutput {
	return i.ToMachineServiceOutputWithContext(context.Background())
}

func (i MachineServiceArgs) ToMachineServiceOutputWithContext(ctx context.Context) MachineServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineServiceOutput)
}

// MachineServiceArrayInput is an input type that accepts MachineServiceArray and MachineServiceArrayOutput values.
// You can construct a concrete instance of `MachineServiceArrayInput` via:
//
//	MachineServiceArray{ MachineServiceArgs{...} }
type MachineServiceArrayInput interface {
	pulumi.Input

	ToMachineServiceArrayOutput() MachineServiceArrayOutput
	ToMachineServiceArrayOutputWithContext(context.Context) MachineServiceArrayOutput
}

type MachineServiceArray []MachineServiceInput

func (MachineServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineService)(nil)).Elem()
}

func (i MachineServiceArray) ToMachineServiceArrayOutput() MachineServiceArrayOutput {
	return i.ToMachineServiceArrayOutputWithContext(context.Background())
}

func (i MachineServiceArray) ToMachineServiceArrayOutputWithContext(ctx context.Context) MachineServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineServiceArrayOutput)
}

type MachineServiceOutput struct{ *pulumi.OutputState }

func (MachineServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineService)(nil)).Elem()
}

func (o MachineServiceOutput) ToMachineServiceOutput() MachineServiceOutput {
	return o
}

func (o MachineServiceOutput) ToMachineServiceOutputWithContext(ctx context.Context) MachineServiceOutput {
	return o
}

// Port application listens on internally
func (o MachineServiceOutput) InternalPort() pulumi.IntOutput {
	return o.ApplyT(func(v MachineService) int { return v.InternalPort }).(pulumi.IntOutput)
}

// External ports and handlers
func (o MachineServiceOutput) Ports() MachineServicePortArrayOutput {
	return o.ApplyT(func(v MachineService) []MachineServicePort { return v.Ports }).(MachineServicePortArrayOutput)
}

// network protocol
func (o MachineServiceOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v MachineService) string { return v.Protocol }).(pulumi.StringOutput)
}

type MachineServiceArrayOutput struct{ *pulumi.OutputState }

func (MachineServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineService)(nil)).Elem()
}

func (o MachineServiceArrayOutput) ToMachineServiceArrayOutput() MachineServiceArrayOutput {
	return o
}

func (o MachineServiceArrayOutput) ToMachineServiceArrayOutputWithContext(ctx context.Context) MachineServiceArrayOutput {
	return o
}

func (o MachineServiceArrayOutput) Index(i pulumi.IntInput) MachineServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineService {
		return vs[0].([]MachineService)[vs[1].(int)]
	}).(MachineServiceOutput)
}

type MachineServicePort struct {
	Handlers []string `pulumi:"handlers"`
	Port     int      `pulumi:"port"`
}

// MachineServicePortInput is an input type that accepts MachineServicePortArgs and MachineServicePortOutput values.
// You can construct a concrete instance of `MachineServicePortInput` via:
//
//	MachineServicePortArgs{...}
type MachineServicePortInput interface {
	pulumi.Input

	ToMachineServicePortOutput() MachineServicePortOutput
	ToMachineServicePortOutputWithContext(context.Context) MachineServicePortOutput
}

type MachineServicePortArgs struct {
	Handlers pulumi.StringArrayInput `pulumi:"handlers"`
	Port     pulumi.IntInput         `pulumi:"port"`
}

func (MachineServicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineServicePort)(nil)).Elem()
}

func (i MachineServicePortArgs) ToMachineServicePortOutput() MachineServicePortOutput {
	return i.ToMachineServicePortOutputWithContext(context.Background())
}

func (i MachineServicePortArgs) ToMachineServicePortOutputWithContext(ctx context.Context) MachineServicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineServicePortOutput)
}

// MachineServicePortArrayInput is an input type that accepts MachineServicePortArray and MachineServicePortArrayOutput values.
// You can construct a concrete instance of `MachineServicePortArrayInput` via:
//
//	MachineServicePortArray{ MachineServicePortArgs{...} }
type MachineServicePortArrayInput interface {
	pulumi.Input

	ToMachineServicePortArrayOutput() MachineServicePortArrayOutput
	ToMachineServicePortArrayOutputWithContext(context.Context) MachineServicePortArrayOutput
}

type MachineServicePortArray []MachineServicePortInput

func (MachineServicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineServicePort)(nil)).Elem()
}

func (i MachineServicePortArray) ToMachineServicePortArrayOutput() MachineServicePortArrayOutput {
	return i.ToMachineServicePortArrayOutputWithContext(context.Background())
}

func (i MachineServicePortArray) ToMachineServicePortArrayOutputWithContext(ctx context.Context) MachineServicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineServicePortArrayOutput)
}

type MachineServicePortOutput struct{ *pulumi.OutputState }

func (MachineServicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineServicePort)(nil)).Elem()
}

func (o MachineServicePortOutput) ToMachineServicePortOutput() MachineServicePortOutput {
	return o
}

func (o MachineServicePortOutput) ToMachineServicePortOutputWithContext(ctx context.Context) MachineServicePortOutput {
	return o
}

func (o MachineServicePortOutput) Handlers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachineServicePort) []string { return v.Handlers }).(pulumi.StringArrayOutput)
}

func (o MachineServicePortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v MachineServicePort) int { return v.Port }).(pulumi.IntOutput)
}

type MachineServicePortArrayOutput struct{ *pulumi.OutputState }

func (MachineServicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MachineServicePort)(nil)).Elem()
}

func (o MachineServicePortArrayOutput) ToMachineServicePortArrayOutput() MachineServicePortArrayOutput {
	return o
}

func (o MachineServicePortArrayOutput) ToMachineServicePortArrayOutputWithContext(ctx context.Context) MachineServicePortArrayOutput {
	return o
}

func (o MachineServicePortArrayOutput) Index(i pulumi.IntInput) MachineServicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MachineServicePort {
		return vs[0].([]MachineServicePort)[vs[1].(int)]
	}).(MachineServicePortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MachineMountInput)(nil)).Elem(), MachineMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineMountArrayInput)(nil)).Elem(), MachineMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineServiceInput)(nil)).Elem(), MachineServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineServiceArrayInput)(nil)).Elem(), MachineServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineServicePortInput)(nil)).Elem(), MachineServicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineServicePortArrayInput)(nil)).Elem(), MachineServicePortArray{})
	pulumi.RegisterOutputType(MachineMountOutput{})
	pulumi.RegisterOutputType(MachineMountArrayOutput{})
	pulumi.RegisterOutputType(MachineServiceOutput{})
	pulumi.RegisterOutputType(MachineServiceArrayOutput{})
	pulumi.RegisterOutputType(MachineServicePortOutput{})
	pulumi.RegisterOutputType(MachineServicePortArrayOutput{})
}
